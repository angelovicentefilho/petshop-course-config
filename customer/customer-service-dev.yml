### APPLICATION CONFIG ###
application:
  environment: Customer Development
spring:
  ### KAFKA CONFIG ###
  kafka:
    bootstrap-servers: ${KAKFA_SERVER:localhost:9092}
    listener:
      ack-mode: MANUAL_IMMEDIATE
    producer:
      bootstrap-servers: ${KAKFA_SERVER:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: ${KAFKA_SERVER:localhost:9092}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
  ### H2 CONFIG ###
  h2:
    console:
      enabled: true
      path: /h2-console
  ### SERVER CONFIG ###
  server:
    port: ${PORT:0}
    forward-headers-strategy: framework
  ### DATASOURCE CONFIG ###
  datasource:
    initialization-mode: embedded
    username: sa
    password:
    url: jdbc:h2:mem:customerdb;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  ### QUERY CONFIG ###
  sql:
    init:
      platform: h2
      data-locations: classpath:data-h2.sql
      mode: always
  ### JPA CONFIG ###
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: validate
  ### REDIS CONFIG ###
  redis:
    port: ${REDIS_PORT:6379}
    host: ${REDIS_HOST:localhost}
    password: ${REDIS_PASS:root}
    database: ${REDIS_DB:0}
  ### ENDPOINT CONFIG ###
  management:
    endpoints:
      web:
        exposure:
          include: '*'
  ### EUREKA CONFIG ###
  eureka:
    instance:
      instance-id: ${spring.application.name}::${spring.application.instance_id:${random.value}}
    client:
      service-url:
        defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
  ### LOG CONFIG ###
  logging:
    file:
      name: ./logs/${spring.application.name}.log